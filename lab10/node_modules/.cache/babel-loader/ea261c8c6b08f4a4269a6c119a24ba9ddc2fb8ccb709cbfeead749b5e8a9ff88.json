{"ast":null,"code":"import { defaultFilters } from \"../types\";\nimport { connect } from \"react-redux\";\nimport { VacancyDescription } from \"../components/VacancyDescription\";\nimport { getVisibleVacancies } from \"./VisibleVacanciesList\";\nimport { cancelSelection, VisibilityFilters } from \"../actions\";\nconst getSelectedVacancy = function (vacancies) {\n  let filter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : VisibilityFilters.SHOW_ALL;\n  let values = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultFilters;\n  let result = getVisibleVacancies(vacancies, filter, values).find(v => v.isSelected);\n  return result === undefined ? null : result;\n};\nconst mapStateToProps = state => ({\n  vacancy: getSelectedVacancy(state.vacancies, state.visibilityFilter.filter, state.visibilityFilter.filterValues)\n});\nconst mapDispatchToProps = dispatch => ({\n  cancelSelection: id => dispatch(cancelSelection(id))\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(VacancyDescription);","map":{"version":3,"names":["defaultFilters","connect","VacancyDescription","getVisibleVacancies","cancelSelection","VisibilityFilters","getSelectedVacancy","vacancies","filter","arguments","length","undefined","SHOW_ALL","values","result","find","v","isSelected","mapStateToProps","state","vacancy","visibilityFilter","filterValues","mapDispatchToProps","dispatch","id"],"sources":["C:/Users/Maria/Documents/5_SEMESTER/JavaScript/ЛБ12_13/lb12-13/lab10/src/containers/DescriptionContainer.tsx"],"sourcesContent":["import {defaultFilters, FiltersType, func, stateType, VacancyInfo} from \"../types\";\nimport {connect} from \"react-redux\";\nimport {VacancyDescription} from \"../components/VacancyDescription\";\nimport {getVisibleVacancies} from \"./VisibleVacanciesList\";\nimport {cancelSelection, VisibilityFilters} from \"../actions\";\n\n\nconst getSelectedVacancy = (vacancies: VacancyInfo[], filter : string = VisibilityFilters.SHOW_ALL, values : FiltersType = defaultFilters) => {\n    let result =  getVisibleVacancies(vacancies, filter, values).find(v => v.isSelected);\n    return result === undefined ? null : result;\n}\n\nconst mapStateToProps = (state : stateType) => ({\n    vacancy: getSelectedVacancy(state.vacancies, state.visibilityFilter.filter, state.visibilityFilter.filterValues),\n});\nconst mapDispatchToProps = (dispatch : func) => ( {\n    cancelSelection: (id: number) => dispatch(cancelSelection(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VacancyDescription);"],"mappings":"AAAA,SAAQA,cAAc,QAAkD,UAAU;AAClF,SAAQC,OAAO,QAAO,aAAa;AACnC,SAAQC,kBAAkB,QAAO,kCAAkC;AACnE,SAAQC,mBAAmB,QAAO,wBAAwB;AAC1D,SAAQC,eAAe,EAAEC,iBAAiB,QAAO,YAAY;AAG7D,MAAMC,kBAAkB,GAAG,SAAAA,CAACC,SAAwB,EAA0F;EAAA,IAAxFC,MAAe,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGJ,iBAAiB,CAACO,QAAQ;EAAA,IAAEC,MAAoB,GAAAJ,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGT,cAAc;EACrI,IAAIc,MAAM,GAAIX,mBAAmB,CAACI,SAAS,EAAEC,MAAM,EAAEK,MAAM,CAAC,CAACE,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,UAAU,CAAC;EACpF,OAAOH,MAAM,KAAKH,SAAS,GAAG,IAAI,GAAGG,MAAM;AAC/C,CAAC;AAED,MAAMI,eAAe,GAAIC,KAAiB,KAAM;EAC5CC,OAAO,EAAEd,kBAAkB,CAACa,KAAK,CAACZ,SAAS,EAAEY,KAAK,CAACE,gBAAgB,CAACb,MAAM,EAAEW,KAAK,CAACE,gBAAgB,CAACC,YAAY;AACnH,CAAC,CAAC;AACF,MAAMC,kBAAkB,GAAIC,QAAe,KAAO;EAC9CpB,eAAe,EAAGqB,EAAU,IAAKD,QAAQ,CAACpB,eAAe,CAACqB,EAAE,CAAC;AACjE,CAAC,CAAC;AAEF,eAAexB,OAAO,CAACiB,eAAe,EAAEK,kBAAkB,CAAC,CAACrB,kBAAkB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}